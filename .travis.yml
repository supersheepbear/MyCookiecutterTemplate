# Specify the primary programming language for the project
language: python

# Define the Python versions to test against
python:
  - "3.9"   # Test with Python 3.9
  - "3.10"  # Test with Python 3.10
  - "3.11"  # Test with Python 3.11
  - "3.12"  # Test with Python 3.12

# Cache pip dependencies to speed up builds
# This saves time by reusing packages from previous builds
cache: pip

# Install dependencies section
# This section defines the commands to run before the test script
install:
  # Upgrade pip to the latest version to ensure we have the most up-to-date package manager
  - pip install --upgrade pip
  # Install tox (a tool for automating test environment management)
  # and tox-travis (a plugin that integrates tox with Travis CI)
  - pip install tox tox-travis

# Command to run tests
# This section specifies the actual test command to execute
script:
  # Run tox, which will create virtual environments and run our test suite
  # tox will use the configuration from tox.ini in our project root
  - tox

# Notification settings
# Configure how and when Travis CI should send notifications about build status
notifications:
  email:
    # Don't send emails on successful builds to reduce noise
    on_success: never
    # Always send emails when a build fails, so we're immediately aware of issues
    on_failure: always

# Branch settings
# Specify which branches should trigger a build when pushed to
branches:
  only:
    # Only build the master branch
    # This helps conserve Travis CI build minutes and focuses CI on our main development branch
    - master
    # Note: Pull requests to master will still be built automatically